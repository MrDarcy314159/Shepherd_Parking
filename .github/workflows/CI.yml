name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up JDK for Android builds
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17' # Update this to match your project's Java version

    # Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33    # Change to the Android API level your project targets
        build-tools-version: '33.0.0' # Use your project's build tools version
        components: |
          platform-tools
          build-tools;33.0.0
          android-33
          extra-google-google_play_services
          extra-google-m2repository
          extra-android-m2repository

    # Cache Gradle dependencies
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    # Build the project and run tests
    - name: Build and run tests
      run: ./gradlew build --stacktrace

    # Run lint checks
    - name: Run Android Lint
      run: ./gradlew lint

    # Run unit tests
    - name: Run Unit Tests
      run: ./gradlew test

    # Run instrumented tests
    - name: Run Instrumented Tests
      run: ./gradlew connectedAndroidTest

    # Optionally add Firebase Emulators (if needed)
    - name: Set up Firebase Emulator
      if: env.FIREBASE_PROJECT_ID != ''
      run: |
        curl -sL https://firebase.tools | bash
        firebase setup:emulators:firestore
        firebase setup:emulators:database
